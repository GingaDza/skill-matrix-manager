name: Automated CI

on:
  schedule:
    - cron: '0 */6 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  auto-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov black isort flake8 pylint autopep8
        if [ -f requirements.txt ]; then
          pip install -r requirements.txt
        fi

    - name: Run tests and collect coverage
      id: tests
      continue-on-error: true
      run: |
        python -m pytest -v --cov=src --cov-report=xml --cov-report=term-missing
        echo "coverage=$(coverage report | grep TOTAL | awk '{print $4}' | sed 's/%//')" >> "$GITHUB_OUTPUT"

    - name: Auto-format code
      if: steps.tests.outcome == 'failure' || steps.tests.outputs.coverage < '80'
      id: format
      run: |
        black .
        isort .
        autopep8 --in-place --aggressive --aggressive -r .
        if [ -n "$(git status --porcelain)" ]; then
          echo "changes=true" >> "$GITHUB_OUTPUT"
        else
          echo "changes=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Create Pull Request for formatting
      if: steps.format.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: |
          style: Auto-format code
          
          - Apply Black formatting
          - Sort imports with isort
          - Fix style with autopep8
        branch: auto-format-${{ github.sha }}
        delete-branch: true
        title: '🤖 Auto-format: Code style improvements'
        body: |
          自動フォーマットによる修正が行われました。
          
          - Black によるコードフォーマット
          - isort によるインポートの整理
          - autopep8 による追加の修正
          
          テストカバレッジ: ${{ steps.tests.outputs.coverage }}%
          
          Current Date and Time (UTC): 2025-01-31 10:10:28
          Current User's Login: GingaDza
        labels: |
          automated
          code-style
        reviewers: GingaDza

    - name: Run linting
      id: lint
      continue-on-error: true
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics > flake8_report.txt || true
        pylint src tests > pylint_report.txt || true

    - name: Create issue for lint errors
      if: steps.lint.outcome == 'failure'
      uses: peter-evans/create-issue-from-file@v4
      with:
        title: "🔍 Lint: Code quality improvements needed"
        content-filepath: |
          flake8_report.txt
          pylint_report.txt
        labels: |
          automated
          code-quality
        assignees: GingaDza

    - name: Generate test report
      if: always()
      run: |
        {
          echo "# テスト実行レポート"
          echo "## テスト結果"
          echo "\`\`\`"
          python -m pytest -v --cov=src --cov-report=term-missing || true
          echo "\`\`\`"
          echo "## コードカバレッジ: ${{ steps.tests.outputs.coverage }}%"
        } > test_report.md

    - name: Create test report issue
      if: always()
      uses: peter-evans/create-issue-from-file@v4
      with:
        title: "📊 Test Report: ${{ steps.tests.outcome }}"
        content-filepath: test_report.md
        labels: |
          automated
          test-report
        assignees: GingaDza